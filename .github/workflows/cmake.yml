name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
#    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install libs
        run: |
          sudo apt-get install libsdl2-dev
          sudo apt-get install libsfml-dev
          sudo apt-get install libomp-dev
          sudo apt install ocl-icd-opencl-dev
          sudo apt-get install openmpi-bin openmpi-common libopenmpi-dev libgtk2.0-dev

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -S . -B ${{github.workspace}}/build -D PROJECT_TO_BUILD=Lib_OpenCL;Lib_OpenMP;Lib_OpenMPI;Lib_PThreads;Lib_SDL2;Lib_SFML;Libs-glfw-glad-opengl;Libs-glfw-glad-opengl-imgui -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -S . -B ${{github.workspace}}/build -D PROJECT_TO_BUILD=Lib_OpenCL;Lib_OpenMP;Lib_SDL2;Lib_SFML;Libs-glfw-glad-opengl;Libs-glfw-glad-opengl-imgui -DCMAKE_BUILD_TYPE=g++

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}
  build-macos:
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Install libs
        run: |
          brew install sdl2
          brew install sfml
          #          brew install libomp
          #          brew install opencl-icd-loader
          #          brew install opencl-headers
          brew install openmpi

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -S . -B ${{github.workspace}}/build -D PROJECT_TO_BUILD=Lib_OpenMPI;Lib_PThreads;Lib_SDL2;Lib_SFML;Libs-glfw-glad-opengl;Libs-glfw-glad-opengl-imgui -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}
